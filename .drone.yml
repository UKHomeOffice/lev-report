---
kind: pipeline
name: default
type: kubernetes

platform:
  os: linux
  arch: amd64

steps:
- name: build-image
  pull: if-not-exists
  image: plugins/docker
  settings:
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/lev-report
    username: ukhomeofficedigital+lev_report
    dry_run: true

- name: test_pr
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/lev-ci
  commands:
    - make test
  when:
    event:
    - pull_request

- name: test_push
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/lev-ci
  commands:
  - set -o pipefail
  - make test | tee 'test.log'
  - set-tags
  when:
    branch:
    - master
    event:
    - push

- name: docker-build-and-push
  pull: if-not-exists
  image: plugins/docker
  settings:
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/lev-report
    username: ukhomeofficedigital+lev_report
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    branch:
    - master
    event:
    - push

- name: deploy_image
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/lev-ci
  commands:
  - source get-package-details
  - kubectl="kubectl --insecure-skip-tls-verify --server=$${KUBE_SERVER} --namespace=$${KUBE_NAMESPACE} --token=$${KUBE_TOKEN}"
  - $${kubectl} scale deployment $${KUBE_DEPLOYMENT} --replicas 2
  - $${kubectl} set image deployment/$${KUBE_DEPLOYMENT} "$${KUBE_CONTAINER}=quay.io/ukhomeofficedigital/lev-report:$${FULL_VERSION}"
  - $${kubectl} rollout status deployment/$${KUBE_DEPLOYMENT}
  - $${kubectl} scale deployment $${KUBE_DEPLOYMENT} --replicas 1
  environment:
    KUBE_CONTAINER:
      from_secret: KUBE_CONTAINER
    KUBE_DEPLOYMENT:
      from_secret: KUBE_DEPLOYMENT
    KUBE_NAMESPACE:
      from_secret: KUBE_NAMESPACE
    KUBE_SERVER:
      from_secret: KUBE_SERVER
    KUBE_TOKEN:
      from_secret: KUBE_TOKEN
  when:
    branch:
    - master
    event:
    - push

- name: notify_slack_success
  pull: if-not-exists
  image: plugins/slack:1.0
  settings:
    channel: general
    template: "*Deployed {{repo.name}} to Dev* - <{{build.link}}|#{{build.number}}>\n"
    username: Drone
  environment:
    SLACK_WEBHOOK:
      from_secret: slack_webhook
  when:
    branch:
    - master
    event:
    - push
    status:
    - success

- name: notify_slack_failure
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: alerts
    template: "*Failed to deploy {{repo.name}} to Dev*\nAuthor: {{build.author}}\nDuration: {{since job.started}} Job: <{{build.link}}|#{{build.number}}>\nCommit: {{build.commit}}\n"
    username: Drone
  environment:
    SLACK_WEBHOOK:
      from_secret: slack_webhook
  when:
    branch:
    - master
    event:
    - push
    status:
    - failure
...
